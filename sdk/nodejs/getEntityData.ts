// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Entities in a store
 */
export function getEntityData(args: GetEntityDataArgs, opts?: pulumi.InvokeOptions): Promise<GetEntityDataResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("deltastream:index/getEntityData:getEntityData", {
        "entityPaths": args.entityPaths,
        "fromBeginning": args.fromBeginning,
        "numRows": args.numRows,
        "store": args.store,
    }, opts);
}

/**
 * A collection of arguments for invoking getEntityData.
 */
export interface GetEntityDataArgs {
    /**
     * Path to entity
     */
    entityPaths: string[];
    /**
     * Read from beginning
     */
    fromBeginning?: boolean;
    /**
     * Number of rows to return
     */
    numRows?: number;
    /**
     * Name of the Store
     */
    store: string;
}

/**
 * A collection of values returned by getEntityData.
 */
export interface GetEntityDataResult {
    /**
     * Path to entity
     */
    readonly entityPaths: string[];
    /**
     * Read from beginning
     */
    readonly fromBeginning?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Number of rows to return
     */
    readonly numRows?: number;
    /**
     * Rows
     */
    readonly rows: string[];
    /**
     * Name of the Store
     */
    readonly store: string;
}
/**
 * Entities in a store
 */
export function getEntityDataOutput(args: GetEntityDataOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetEntityDataResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("deltastream:index/getEntityData:getEntityData", {
        "entityPaths": args.entityPaths,
        "fromBeginning": args.fromBeginning,
        "numRows": args.numRows,
        "store": args.store,
    }, opts);
}

/**
 * A collection of arguments for invoking getEntityData.
 */
export interface GetEntityDataOutputArgs {
    /**
     * Path to entity
     */
    entityPaths: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Read from beginning
     */
    fromBeginning?: pulumi.Input<boolean>;
    /**
     * Number of rows to return
     */
    numRows?: pulumi.Input<number>;
    /**
     * Name of the Store
     */
    store: pulumi.Input<string>;
}
