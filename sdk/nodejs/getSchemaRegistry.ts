// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Schema registry datasource
 */
export function getSchemaRegistry(args: GetSchemaRegistryArgs, opts?: pulumi.InvokeOptions): Promise<GetSchemaRegistryResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("deltastream:index/getSchemaRegistry:getSchemaRegistry", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getSchemaRegistry.
 */
export interface GetSchemaRegistryArgs {
    /**
     * Name of the schema registry
     */
    name: string;
}

/**
 * A collection of values returned by getSchemaRegistry.
 */
export interface GetSchemaRegistryResult {
    /**
     * Creation date of the schema registry
     */
    readonly createdAt: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Name of the schema registry
     */
    readonly name: string;
    /**
     * Owning role of the schema registry
     */
    readonly owner: string;
    /**
     * State of the schema registry
     */
    readonly state: string;
    /**
     * Type of the schema registry
     */
    readonly type: string;
    /**
     * Last update date of the schema registry
     */
    readonly updatedAt: string;
}
/**
 * Schema registry datasource
 */
export function getSchemaRegistryOutput(args: GetSchemaRegistryOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSchemaRegistryResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("deltastream:index/getSchemaRegistry:getSchemaRegistry", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getSchemaRegistry.
 */
export interface GetSchemaRegistryOutputArgs {
    /**
     * Name of the schema registry
     */
    name: pulumi.Input<string>;
}
