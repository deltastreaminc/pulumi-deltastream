// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Secret resource
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as deltastream from "@deltastream/pulumi-deltastream";
 *
 * const example = deltastream.getSecret({
 *     name: "example_secret",
 * });
 * ```
 */
export function getSecret(args: GetSecretArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("deltastream:index/getSecret:getSecret", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecret.
 */
export interface GetSecretArgs {
    /**
     * Name of the Secret
     */
    name: string;
}

/**
 * A collection of values returned by getSecret.
 */
export interface GetSecretResult {
    /**
     * Creation date of the Secret
     */
    readonly createdAt: string;
    /**
     * Description of the Secret
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Name of the Secret
     */
    readonly name: string;
    /**
     * Owning role of the Secret
     */
    readonly owner: string;
    /**
     * Status of the Secret
     */
    readonly status: string;
    /**
     * Secret type. (Valid values: generic_string)
     */
    readonly type: string;
    /**
     * Last update date of the Secret
     */
    readonly updatedAt: string;
}
/**
 * Secret resource
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as deltastream from "@deltastream/pulumi-deltastream";
 *
 * const example = deltastream.getSecret({
 *     name: "example_secret",
 * });
 * ```
 */
export function getSecretOutput(args: GetSecretOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSecretResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("deltastream:index/getSecret:getSecret", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecret.
 */
export interface GetSecretOutputArgs {
    /**
     * Name of the Secret
     */
    name: pulumi.Input<string>;
}
