// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Schema registries datasource
 */
export function getSchemaRegistries(opts?: pulumi.InvokeOptions): Promise<GetSchemaRegistriesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("deltastream:index/getSchemaRegistries:getSchemaRegistries", {
    }, opts);
}

/**
 * A collection of values returned by getSchemaRegistries.
 */
export interface GetSchemaRegistriesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * List of schema registries
     */
    readonly items: outputs.GetSchemaRegistriesItem[];
}
/**
 * Schema registries datasource
 */
export function getSchemaRegistriesOutput(opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSchemaRegistriesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("deltastream:index/getSchemaRegistries:getSchemaRegistries", {
    }, opts);
}
