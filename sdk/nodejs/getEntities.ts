// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Entities in a store
 */
export function getEntities(args: GetEntitiesArgs, opts?: pulumi.InvokeOptions): Promise<GetEntitiesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("deltastream:index/getEntities:getEntities", {
        "parentPaths": args.parentPaths,
        "store": args.store,
    }, opts);
}

/**
 * A collection of arguments for invoking getEntities.
 */
export interface GetEntitiesArgs {
    /**
     * Path to parent entity
     */
    parentPaths?: string[];
    /**
     * Name of the Store
     */
    store: string;
}

/**
 * A collection of values returned by getEntities.
 */
export interface GetEntitiesResult {
    /**
     * Child entities
     */
    readonly childEntities: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Path to parent entity
     */
    readonly parentPaths?: string[];
    /**
     * Name of the Store
     */
    readonly store: string;
}
/**
 * Entities in a store
 */
export function getEntitiesOutput(args: GetEntitiesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetEntitiesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("deltastream:index/getEntities:getEntities", {
        "parentPaths": args.parentPaths,
        "store": args.store,
    }, opts);
}

/**
 * A collection of arguments for invoking getEntities.
 */
export interface GetEntitiesOutputArgs {
    /**
     * Path to parent entity
     */
    parentPaths?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the Store
     */
    store: pulumi.Input<string>;
}
