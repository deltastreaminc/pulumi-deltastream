// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Objects resource
 */
export function getObjects(args: GetObjectsArgs, opts?: pulumi.InvokeOptions): Promise<GetObjectsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("deltastream:index/getObjects:getObjects", {
        "database": args.database,
        "namespace": args.namespace,
    }, opts);
}

/**
 * A collection of arguments for invoking getObjects.
 */
export interface GetObjectsArgs {
    /**
     * Name of the Database
     */
    database: string;
    /**
     * Name of the Namespace
     */
    namespace: string;
}

/**
 * A collection of values returned by getObjects.
 */
export interface GetObjectsResult {
    /**
     * Name of the Database
     */
    readonly database: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Name of the Namespace
     */
    readonly namespace: string;
    /**
     * List of objects
     */
    readonly objects: outputs.GetObjectsObject[];
}
/**
 * Objects resource
 */
export function getObjectsOutput(args: GetObjectsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetObjectsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("deltastream:index/getObjects:getObjects", {
        "database": args.database,
        "namespace": args.namespace,
    }, opts);
}

/**
 * A collection of arguments for invoking getObjects.
 */
export interface GetObjectsOutputArgs {
    /**
     * Name of the Database
     */
    database: pulumi.Input<string>;
    /**
     * Name of the Namespace
     */
    namespace: pulumi.Input<string>;
}
