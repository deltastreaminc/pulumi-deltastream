// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pulumideltastream

import (
	"context"
	"reflect"

	"github.com/deltastreaminc/pulumi-deltastream/sdk/go/pulumi-deltastream/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetDatabaseResult struct {
	CreatedAt string `pulumi:"createdAt"`
	Name      string `pulumi:"name"`
	Owner     string `pulumi:"owner"`
}

type GetDatabaseResultOutput struct{ *pulumi.OutputState }

func (GetDatabaseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseResult)(nil)).Elem()
}

func (o GetDatabaseResultOutput) ToGetDatabaseResultOutput() GetDatabaseResultOutput {
	return o
}

func (o GetDatabaseResultOutput) ToGetDatabaseResultOutputWithContext(ctx context.Context) GetDatabaseResultOutput {
	return o
}

func (o GetDatabaseResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetDatabaseResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDatabaseResultOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseResult) string { return v.Owner }).(pulumi.StringOutput)
}

type GetDatabaseResultArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseResult)(nil)).Elem()
}

func (o GetDatabaseResultArrayOutput) ToGetDatabaseResultArrayOutput() GetDatabaseResultArrayOutput {
	return o
}

func (o GetDatabaseResultArrayOutput) ToGetDatabaseResultArrayOutputWithContext(ctx context.Context) GetDatabaseResultArrayOutput {
	return o
}

func (o GetDatabaseResultArrayOutput) Index(i pulumi.IntInput) GetDatabaseResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseResult {
		return vs[0].([]GetDatabaseResult)[vs[1].(int)]
	}).(GetDatabaseResultOutput)
}

type GetNamespaceResult struct {
	CreatedAt string `pulumi:"createdAt"`
	Database  string `pulumi:"database"`
	Name      string `pulumi:"name"`
	Owner     string `pulumi:"owner"`
}

type GetNamespaceResultOutput struct{ *pulumi.OutputState }

func (GetNamespaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespaceResult)(nil)).Elem()
}

func (o GetNamespaceResultOutput) ToGetNamespaceResultOutput() GetNamespaceResultOutput {
	return o
}

func (o GetNamespaceResultOutput) ToGetNamespaceResultOutputWithContext(ctx context.Context) GetNamespaceResultOutput {
	return o
}

func (o GetNamespaceResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetNamespaceResultOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceResult) string { return v.Database }).(pulumi.StringOutput)
}

func (o GetNamespaceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNamespaceResultOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetNamespaceResult) string { return v.Owner }).(pulumi.StringOutput)
}

type GetNamespaceResultArrayOutput struct{ *pulumi.OutputState }

func (GetNamespaceResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNamespaceResult)(nil)).Elem()
}

func (o GetNamespaceResultArrayOutput) ToGetNamespaceResultArrayOutput() GetNamespaceResultArrayOutput {
	return o
}

func (o GetNamespaceResultArrayOutput) ToGetNamespaceResultArrayOutputWithContext(ctx context.Context) GetNamespaceResultArrayOutput {
	return o
}

func (o GetNamespaceResultArrayOutput) Index(i pulumi.IntInput) GetNamespaceResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNamespaceResult {
		return vs[0].([]GetNamespaceResult)[vs[1].(int)]
	}).(GetNamespaceResultOutput)
}

type GetObjectResult struct {
	CreatedAt string `pulumi:"createdAt"`
	Database  string `pulumi:"database"`
	Fqn       string `pulumi:"fqn"`
	Name      string `pulumi:"name"`
	Namespace string `pulumi:"namespace"`
	Owner     string `pulumi:"owner"`
	State     string `pulumi:"state"`
	Type      string `pulumi:"type"`
	UpdatedAt string `pulumi:"updatedAt"`
}

type GetObjectResultOutput struct{ *pulumi.OutputState }

func (GetObjectResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetObjectResult)(nil)).Elem()
}

func (o GetObjectResultOutput) ToGetObjectResultOutput() GetObjectResultOutput {
	return o
}

func (o GetObjectResultOutput) ToGetObjectResultOutputWithContext(ctx context.Context) GetObjectResultOutput {
	return o
}

func (o GetObjectResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetObjectResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetObjectResultOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetObjectResult) string { return v.Database }).(pulumi.StringOutput)
}

func (o GetObjectResultOutput) Fqn() pulumi.StringOutput {
	return o.ApplyT(func(v GetObjectResult) string { return v.Fqn }).(pulumi.StringOutput)
}

func (o GetObjectResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetObjectResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetObjectResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetObjectResult) string { return v.Namespace }).(pulumi.StringOutput)
}

func (o GetObjectResultOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetObjectResult) string { return v.Owner }).(pulumi.StringOutput)
}

func (o GetObjectResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetObjectResult) string { return v.State }).(pulumi.StringOutput)
}

func (o GetObjectResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetObjectResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetObjectResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetObjectResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetObjectResultArrayOutput struct{ *pulumi.OutputState }

func (GetObjectResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetObjectResult)(nil)).Elem()
}

func (o GetObjectResultArrayOutput) ToGetObjectResultArrayOutput() GetObjectResultArrayOutput {
	return o
}

func (o GetObjectResultArrayOutput) ToGetObjectResultArrayOutputWithContext(ctx context.Context) GetObjectResultArrayOutput {
	return o
}

func (o GetObjectResultArrayOutput) Index(i pulumi.IntInput) GetObjectResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetObjectResult {
		return vs[0].([]GetObjectResult)[vs[1].(int)]
	}).(GetObjectResultOutput)
}

type GetStoreResult struct {
	CreatedAt string `pulumi:"createdAt"`
	Name      string `pulumi:"name"`
	Owner     string `pulumi:"owner"`
	State     string `pulumi:"state"`
	Type      string `pulumi:"type"`
	UpdatedAt string `pulumi:"updatedAt"`
}

type GetStoreResultOutput struct{ *pulumi.OutputState }

func (GetStoreResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStoreResult)(nil)).Elem()
}

func (o GetStoreResultOutput) ToGetStoreResultOutput() GetStoreResultOutput {
	return o
}

func (o GetStoreResultOutput) ToGetStoreResultOutputWithContext(ctx context.Context) GetStoreResultOutput {
	return o
}

func (o GetStoreResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetStoreResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetStoreResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStoreResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetStoreResultOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetStoreResult) string { return v.Owner }).(pulumi.StringOutput)
}

func (o GetStoreResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetStoreResult) string { return v.State }).(pulumi.StringOutput)
}

func (o GetStoreResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetStoreResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetStoreResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetStoreResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetStoreResultArrayOutput struct{ *pulumi.OutputState }

func (GetStoreResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStoreResult)(nil)).Elem()
}

func (o GetStoreResultArrayOutput) ToGetStoreResultArrayOutput() GetStoreResultArrayOutput {
	return o
}

func (o GetStoreResultArrayOutput) ToGetStoreResultArrayOutputWithContext(ctx context.Context) GetStoreResultArrayOutput {
	return o
}

func (o GetStoreResultArrayOutput) Index(i pulumi.IntInput) GetStoreResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStoreResult {
		return vs[0].([]GetStoreResult)[vs[1].(int)]
	}).(GetStoreResultOutput)
}

type KafkaInputs struct {
	MskAwsRegion            *string `pulumi:"mskAwsRegion"`
	MskIamRoleArn           *string `pulumi:"mskIamRoleArn"`
	SaslHashFunction        string  `pulumi:"saslHashFunction"`
	SaslPassword            *string `pulumi:"saslPassword"`
	SaslUsername            *string `pulumi:"saslUsername"`
	SchemaRegistryName      *string `pulumi:"schemaRegistryName"`
	TlsCaCertFile           *string `pulumi:"tlsCaCertFile"`
	TlsDisabled             *bool   `pulumi:"tlsDisabled"`
	TlsVerifyServerHostname *bool   `pulumi:"tlsVerifyServerHostname"`
	Uris                    string  `pulumi:"uris"`
}

// KafkaInputsInput is an input type that accepts KafkaInputsArgs and KafkaInputsOutput values.
// You can construct a concrete instance of `KafkaInputsInput` via:
//
//	KafkaInputsArgs{...}
type KafkaInputsInput interface {
	pulumi.Input

	ToKafkaInputsOutput() KafkaInputsOutput
	ToKafkaInputsOutputWithContext(context.Context) KafkaInputsOutput
}

type KafkaInputsArgs struct {
	MskAwsRegion            pulumi.StringPtrInput `pulumi:"mskAwsRegion"`
	MskIamRoleArn           pulumi.StringPtrInput `pulumi:"mskIamRoleArn"`
	SaslHashFunction        pulumi.StringInput    `pulumi:"saslHashFunction"`
	SaslPassword            pulumi.StringPtrInput `pulumi:"saslPassword"`
	SaslUsername            pulumi.StringPtrInput `pulumi:"saslUsername"`
	SchemaRegistryName      pulumi.StringPtrInput `pulumi:"schemaRegistryName"`
	TlsCaCertFile           pulumi.StringPtrInput `pulumi:"tlsCaCertFile"`
	TlsDisabled             pulumi.BoolPtrInput   `pulumi:"tlsDisabled"`
	TlsVerifyServerHostname pulumi.BoolPtrInput   `pulumi:"tlsVerifyServerHostname"`
	Uris                    pulumi.StringInput    `pulumi:"uris"`
}

func (KafkaInputsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaInputs)(nil)).Elem()
}

func (i KafkaInputsArgs) ToKafkaInputsOutput() KafkaInputsOutput {
	return i.ToKafkaInputsOutputWithContext(context.Background())
}

func (i KafkaInputsArgs) ToKafkaInputsOutputWithContext(ctx context.Context) KafkaInputsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaInputsOutput)
}

func (i KafkaInputsArgs) ToKafkaInputsPtrOutput() KafkaInputsPtrOutput {
	return i.ToKafkaInputsPtrOutputWithContext(context.Background())
}

func (i KafkaInputsArgs) ToKafkaInputsPtrOutputWithContext(ctx context.Context) KafkaInputsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaInputsOutput).ToKafkaInputsPtrOutputWithContext(ctx)
}

// KafkaInputsPtrInput is an input type that accepts KafkaInputsArgs, KafkaInputsPtr and KafkaInputsPtrOutput values.
// You can construct a concrete instance of `KafkaInputsPtrInput` via:
//
//	        KafkaInputsArgs{...}
//
//	or:
//
//	        nil
type KafkaInputsPtrInput interface {
	pulumi.Input

	ToKafkaInputsPtrOutput() KafkaInputsPtrOutput
	ToKafkaInputsPtrOutputWithContext(context.Context) KafkaInputsPtrOutput
}

type kafkaInputsPtrType KafkaInputsArgs

func KafkaInputsPtr(v *KafkaInputsArgs) KafkaInputsPtrInput {
	return (*kafkaInputsPtrType)(v)
}

func (*kafkaInputsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaInputs)(nil)).Elem()
}

func (i *kafkaInputsPtrType) ToKafkaInputsPtrOutput() KafkaInputsPtrOutput {
	return i.ToKafkaInputsPtrOutputWithContext(context.Background())
}

func (i *kafkaInputsPtrType) ToKafkaInputsPtrOutputWithContext(ctx context.Context) KafkaInputsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaInputsPtrOutput)
}

type KafkaInputsOutput struct{ *pulumi.OutputState }

func (KafkaInputsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaInputs)(nil)).Elem()
}

func (o KafkaInputsOutput) ToKafkaInputsOutput() KafkaInputsOutput {
	return o
}

func (o KafkaInputsOutput) ToKafkaInputsOutputWithContext(ctx context.Context) KafkaInputsOutput {
	return o
}

func (o KafkaInputsOutput) ToKafkaInputsPtrOutput() KafkaInputsPtrOutput {
	return o.ToKafkaInputsPtrOutputWithContext(context.Background())
}

func (o KafkaInputsOutput) ToKafkaInputsPtrOutputWithContext(ctx context.Context) KafkaInputsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaInputs) *KafkaInputs {
		return &v
	}).(KafkaInputsPtrOutput)
}

func (o KafkaInputsOutput) MskAwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaInputs) *string { return v.MskAwsRegion }).(pulumi.StringPtrOutput)
}

func (o KafkaInputsOutput) MskIamRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaInputs) *string { return v.MskIamRoleArn }).(pulumi.StringPtrOutput)
}

func (o KafkaInputsOutput) SaslHashFunction() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaInputs) string { return v.SaslHashFunction }).(pulumi.StringOutput)
}

func (o KafkaInputsOutput) SaslPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaInputs) *string { return v.SaslPassword }).(pulumi.StringPtrOutput)
}

func (o KafkaInputsOutput) SaslUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaInputs) *string { return v.SaslUsername }).(pulumi.StringPtrOutput)
}

func (o KafkaInputsOutput) SchemaRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaInputs) *string { return v.SchemaRegistryName }).(pulumi.StringPtrOutput)
}

func (o KafkaInputsOutput) TlsCaCertFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaInputs) *string { return v.TlsCaCertFile }).(pulumi.StringPtrOutput)
}

func (o KafkaInputsOutput) TlsDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaInputs) *bool { return v.TlsDisabled }).(pulumi.BoolPtrOutput)
}

func (o KafkaInputsOutput) TlsVerifyServerHostname() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaInputs) *bool { return v.TlsVerifyServerHostname }).(pulumi.BoolPtrOutput)
}

func (o KafkaInputsOutput) Uris() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaInputs) string { return v.Uris }).(pulumi.StringOutput)
}

type KafkaInputsPtrOutput struct{ *pulumi.OutputState }

func (KafkaInputsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaInputs)(nil)).Elem()
}

func (o KafkaInputsPtrOutput) ToKafkaInputsPtrOutput() KafkaInputsPtrOutput {
	return o
}

func (o KafkaInputsPtrOutput) ToKafkaInputsPtrOutputWithContext(ctx context.Context) KafkaInputsPtrOutput {
	return o
}

func (o KafkaInputsPtrOutput) Elem() KafkaInputsOutput {
	return o.ApplyT(func(v *KafkaInputs) KafkaInputs {
		if v != nil {
			return *v
		}
		var ret KafkaInputs
		return ret
	}).(KafkaInputsOutput)
}

func (o KafkaInputsPtrOutput) MskAwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaInputs) *string {
		if v == nil {
			return nil
		}
		return v.MskAwsRegion
	}).(pulumi.StringPtrOutput)
}

func (o KafkaInputsPtrOutput) MskIamRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaInputs) *string {
		if v == nil {
			return nil
		}
		return v.MskIamRoleArn
	}).(pulumi.StringPtrOutput)
}

func (o KafkaInputsPtrOutput) SaslHashFunction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaInputs) *string {
		if v == nil {
			return nil
		}
		return &v.SaslHashFunction
	}).(pulumi.StringPtrOutput)
}

func (o KafkaInputsPtrOutput) SaslPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaInputs) *string {
		if v == nil {
			return nil
		}
		return v.SaslPassword
	}).(pulumi.StringPtrOutput)
}

func (o KafkaInputsPtrOutput) SaslUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaInputs) *string {
		if v == nil {
			return nil
		}
		return v.SaslUsername
	}).(pulumi.StringPtrOutput)
}

func (o KafkaInputsPtrOutput) SchemaRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaInputs) *string {
		if v == nil {
			return nil
		}
		return v.SchemaRegistryName
	}).(pulumi.StringPtrOutput)
}

func (o KafkaInputsPtrOutput) TlsCaCertFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaInputs) *string {
		if v == nil {
			return nil
		}
		return v.TlsCaCertFile
	}).(pulumi.StringPtrOutput)
}

func (o KafkaInputsPtrOutput) TlsDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaInputs) *bool {
		if v == nil {
			return nil
		}
		return v.TlsDisabled
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaInputsPtrOutput) TlsVerifyServerHostname() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaInputs) *bool {
		if v == nil {
			return nil
		}
		return v.TlsVerifyServerHostname
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaInputsPtrOutput) Uris() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaInputs) *string {
		if v == nil {
			return nil
		}
		return &v.Uris
	}).(pulumi.StringPtrOutput)
}

type PostgresInputs struct {
	Password                string `pulumi:"password"`
	TlsDisabled             *bool  `pulumi:"tlsDisabled"`
	TlsVerifyServerHostname *bool  `pulumi:"tlsVerifyServerHostname"`
	Uris                    string `pulumi:"uris"`
	Username                string `pulumi:"username"`
}

// PostgresInputsInput is an input type that accepts PostgresInputsArgs and PostgresInputsOutput values.
// You can construct a concrete instance of `PostgresInputsInput` via:
//
//	PostgresInputsArgs{...}
type PostgresInputsInput interface {
	pulumi.Input

	ToPostgresInputsOutput() PostgresInputsOutput
	ToPostgresInputsOutputWithContext(context.Context) PostgresInputsOutput
}

type PostgresInputsArgs struct {
	Password                pulumi.StringInput  `pulumi:"password"`
	TlsDisabled             pulumi.BoolPtrInput `pulumi:"tlsDisabled"`
	TlsVerifyServerHostname pulumi.BoolPtrInput `pulumi:"tlsVerifyServerHostname"`
	Uris                    pulumi.StringInput  `pulumi:"uris"`
	Username                pulumi.StringInput  `pulumi:"username"`
}

func (PostgresInputsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresInputs)(nil)).Elem()
}

func (i PostgresInputsArgs) ToPostgresInputsOutput() PostgresInputsOutput {
	return i.ToPostgresInputsOutputWithContext(context.Background())
}

func (i PostgresInputsArgs) ToPostgresInputsOutputWithContext(ctx context.Context) PostgresInputsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgresInputsOutput)
}

func (i PostgresInputsArgs) ToPostgresInputsPtrOutput() PostgresInputsPtrOutput {
	return i.ToPostgresInputsPtrOutputWithContext(context.Background())
}

func (i PostgresInputsArgs) ToPostgresInputsPtrOutputWithContext(ctx context.Context) PostgresInputsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgresInputsOutput).ToPostgresInputsPtrOutputWithContext(ctx)
}

// PostgresInputsPtrInput is an input type that accepts PostgresInputsArgs, PostgresInputsPtr and PostgresInputsPtrOutput values.
// You can construct a concrete instance of `PostgresInputsPtrInput` via:
//
//	        PostgresInputsArgs{...}
//
//	or:
//
//	        nil
type PostgresInputsPtrInput interface {
	pulumi.Input

	ToPostgresInputsPtrOutput() PostgresInputsPtrOutput
	ToPostgresInputsPtrOutputWithContext(context.Context) PostgresInputsPtrOutput
}

type postgresInputsPtrType PostgresInputsArgs

func PostgresInputsPtr(v *PostgresInputsArgs) PostgresInputsPtrInput {
	return (*postgresInputsPtrType)(v)
}

func (*postgresInputsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgresInputs)(nil)).Elem()
}

func (i *postgresInputsPtrType) ToPostgresInputsPtrOutput() PostgresInputsPtrOutput {
	return i.ToPostgresInputsPtrOutputWithContext(context.Background())
}

func (i *postgresInputsPtrType) ToPostgresInputsPtrOutputWithContext(ctx context.Context) PostgresInputsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgresInputsPtrOutput)
}

type PostgresInputsOutput struct{ *pulumi.OutputState }

func (PostgresInputsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresInputs)(nil)).Elem()
}

func (o PostgresInputsOutput) ToPostgresInputsOutput() PostgresInputsOutput {
	return o
}

func (o PostgresInputsOutput) ToPostgresInputsOutputWithContext(ctx context.Context) PostgresInputsOutput {
	return o
}

func (o PostgresInputsOutput) ToPostgresInputsPtrOutput() PostgresInputsPtrOutput {
	return o.ToPostgresInputsPtrOutputWithContext(context.Background())
}

func (o PostgresInputsOutput) ToPostgresInputsPtrOutputWithContext(ctx context.Context) PostgresInputsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PostgresInputs) *PostgresInputs {
		return &v
	}).(PostgresInputsPtrOutput)
}

func (o PostgresInputsOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v PostgresInputs) string { return v.Password }).(pulumi.StringOutput)
}

func (o PostgresInputsOutput) TlsDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PostgresInputs) *bool { return v.TlsDisabled }).(pulumi.BoolPtrOutput)
}

func (o PostgresInputsOutput) TlsVerifyServerHostname() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PostgresInputs) *bool { return v.TlsVerifyServerHostname }).(pulumi.BoolPtrOutput)
}

func (o PostgresInputsOutput) Uris() pulumi.StringOutput {
	return o.ApplyT(func(v PostgresInputs) string { return v.Uris }).(pulumi.StringOutput)
}

func (o PostgresInputsOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v PostgresInputs) string { return v.Username }).(pulumi.StringOutput)
}

type PostgresInputsPtrOutput struct{ *pulumi.OutputState }

func (PostgresInputsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgresInputs)(nil)).Elem()
}

func (o PostgresInputsPtrOutput) ToPostgresInputsPtrOutput() PostgresInputsPtrOutput {
	return o
}

func (o PostgresInputsPtrOutput) ToPostgresInputsPtrOutputWithContext(ctx context.Context) PostgresInputsPtrOutput {
	return o
}

func (o PostgresInputsPtrOutput) Elem() PostgresInputsOutput {
	return o.ApplyT(func(v *PostgresInputs) PostgresInputs {
		if v != nil {
			return *v
		}
		var ret PostgresInputs
		return ret
	}).(PostgresInputsOutput)
}

func (o PostgresInputsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgresInputs) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

func (o PostgresInputsPtrOutput) TlsDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PostgresInputs) *bool {
		if v == nil {
			return nil
		}
		return v.TlsDisabled
	}).(pulumi.BoolPtrOutput)
}

func (o PostgresInputsPtrOutput) TlsVerifyServerHostname() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PostgresInputs) *bool {
		if v == nil {
			return nil
		}
		return v.TlsVerifyServerHostname
	}).(pulumi.BoolPtrOutput)
}

func (o PostgresInputsPtrOutput) Uris() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgresInputs) *string {
		if v == nil {
			return nil
		}
		return &v.Uris
	}).(pulumi.StringPtrOutput)
}

func (o PostgresInputsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgresInputs) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type SnowflakeInputs struct {
	AccountId     string `pulumi:"accountId"`
	ClientKey     string `pulumi:"clientKey"`
	CloudRegion   string `pulumi:"cloudRegion"`
	RoleName      string `pulumi:"roleName"`
	Uris          string `pulumi:"uris"`
	Username      string `pulumi:"username"`
	WarehouseName string `pulumi:"warehouseName"`
}

// SnowflakeInputsInput is an input type that accepts SnowflakeInputsArgs and SnowflakeInputsOutput values.
// You can construct a concrete instance of `SnowflakeInputsInput` via:
//
//	SnowflakeInputsArgs{...}
type SnowflakeInputsInput interface {
	pulumi.Input

	ToSnowflakeInputsOutput() SnowflakeInputsOutput
	ToSnowflakeInputsOutputWithContext(context.Context) SnowflakeInputsOutput
}

type SnowflakeInputsArgs struct {
	AccountId     pulumi.StringInput `pulumi:"accountId"`
	ClientKey     pulumi.StringInput `pulumi:"clientKey"`
	CloudRegion   pulumi.StringInput `pulumi:"cloudRegion"`
	RoleName      pulumi.StringInput `pulumi:"roleName"`
	Uris          pulumi.StringInput `pulumi:"uris"`
	Username      pulumi.StringInput `pulumi:"username"`
	WarehouseName pulumi.StringInput `pulumi:"warehouseName"`
}

func (SnowflakeInputsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnowflakeInputs)(nil)).Elem()
}

func (i SnowflakeInputsArgs) ToSnowflakeInputsOutput() SnowflakeInputsOutput {
	return i.ToSnowflakeInputsOutputWithContext(context.Background())
}

func (i SnowflakeInputsArgs) ToSnowflakeInputsOutputWithContext(ctx context.Context) SnowflakeInputsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnowflakeInputsOutput)
}

func (i SnowflakeInputsArgs) ToSnowflakeInputsPtrOutput() SnowflakeInputsPtrOutput {
	return i.ToSnowflakeInputsPtrOutputWithContext(context.Background())
}

func (i SnowflakeInputsArgs) ToSnowflakeInputsPtrOutputWithContext(ctx context.Context) SnowflakeInputsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnowflakeInputsOutput).ToSnowflakeInputsPtrOutputWithContext(ctx)
}

// SnowflakeInputsPtrInput is an input type that accepts SnowflakeInputsArgs, SnowflakeInputsPtr and SnowflakeInputsPtrOutput values.
// You can construct a concrete instance of `SnowflakeInputsPtrInput` via:
//
//	        SnowflakeInputsArgs{...}
//
//	or:
//
//	        nil
type SnowflakeInputsPtrInput interface {
	pulumi.Input

	ToSnowflakeInputsPtrOutput() SnowflakeInputsPtrOutput
	ToSnowflakeInputsPtrOutputWithContext(context.Context) SnowflakeInputsPtrOutput
}

type snowflakeInputsPtrType SnowflakeInputsArgs

func SnowflakeInputsPtr(v *SnowflakeInputsArgs) SnowflakeInputsPtrInput {
	return (*snowflakeInputsPtrType)(v)
}

func (*snowflakeInputsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SnowflakeInputs)(nil)).Elem()
}

func (i *snowflakeInputsPtrType) ToSnowflakeInputsPtrOutput() SnowflakeInputsPtrOutput {
	return i.ToSnowflakeInputsPtrOutputWithContext(context.Background())
}

func (i *snowflakeInputsPtrType) ToSnowflakeInputsPtrOutputWithContext(ctx context.Context) SnowflakeInputsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnowflakeInputsPtrOutput)
}

type SnowflakeInputsOutput struct{ *pulumi.OutputState }

func (SnowflakeInputsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnowflakeInputs)(nil)).Elem()
}

func (o SnowflakeInputsOutput) ToSnowflakeInputsOutput() SnowflakeInputsOutput {
	return o
}

func (o SnowflakeInputsOutput) ToSnowflakeInputsOutputWithContext(ctx context.Context) SnowflakeInputsOutput {
	return o
}

func (o SnowflakeInputsOutput) ToSnowflakeInputsPtrOutput() SnowflakeInputsPtrOutput {
	return o.ToSnowflakeInputsPtrOutputWithContext(context.Background())
}

func (o SnowflakeInputsOutput) ToSnowflakeInputsPtrOutputWithContext(ctx context.Context) SnowflakeInputsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SnowflakeInputs) *SnowflakeInputs {
		return &v
	}).(SnowflakeInputsPtrOutput)
}

func (o SnowflakeInputsOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v SnowflakeInputs) string { return v.AccountId }).(pulumi.StringOutput)
}

func (o SnowflakeInputsOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v SnowflakeInputs) string { return v.ClientKey }).(pulumi.StringOutput)
}

func (o SnowflakeInputsOutput) CloudRegion() pulumi.StringOutput {
	return o.ApplyT(func(v SnowflakeInputs) string { return v.CloudRegion }).(pulumi.StringOutput)
}

func (o SnowflakeInputsOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v SnowflakeInputs) string { return v.RoleName }).(pulumi.StringOutput)
}

func (o SnowflakeInputsOutput) Uris() pulumi.StringOutput {
	return o.ApplyT(func(v SnowflakeInputs) string { return v.Uris }).(pulumi.StringOutput)
}

func (o SnowflakeInputsOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v SnowflakeInputs) string { return v.Username }).(pulumi.StringOutput)
}

func (o SnowflakeInputsOutput) WarehouseName() pulumi.StringOutput {
	return o.ApplyT(func(v SnowflakeInputs) string { return v.WarehouseName }).(pulumi.StringOutput)
}

type SnowflakeInputsPtrOutput struct{ *pulumi.OutputState }

func (SnowflakeInputsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnowflakeInputs)(nil)).Elem()
}

func (o SnowflakeInputsPtrOutput) ToSnowflakeInputsPtrOutput() SnowflakeInputsPtrOutput {
	return o
}

func (o SnowflakeInputsPtrOutput) ToSnowflakeInputsPtrOutputWithContext(ctx context.Context) SnowflakeInputsPtrOutput {
	return o
}

func (o SnowflakeInputsPtrOutput) Elem() SnowflakeInputsOutput {
	return o.ApplyT(func(v *SnowflakeInputs) SnowflakeInputs {
		if v != nil {
			return *v
		}
		var ret SnowflakeInputs
		return ret
	}).(SnowflakeInputsOutput)
}

func (o SnowflakeInputsPtrOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnowflakeInputs) *string {
		if v == nil {
			return nil
		}
		return &v.AccountId
	}).(pulumi.StringPtrOutput)
}

func (o SnowflakeInputsPtrOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnowflakeInputs) *string {
		if v == nil {
			return nil
		}
		return &v.ClientKey
	}).(pulumi.StringPtrOutput)
}

func (o SnowflakeInputsPtrOutput) CloudRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnowflakeInputs) *string {
		if v == nil {
			return nil
		}
		return &v.CloudRegion
	}).(pulumi.StringPtrOutput)
}

func (o SnowflakeInputsPtrOutput) RoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnowflakeInputs) *string {
		if v == nil {
			return nil
		}
		return &v.RoleName
	}).(pulumi.StringPtrOutput)
}

func (o SnowflakeInputsPtrOutput) Uris() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnowflakeInputs) *string {
		if v == nil {
			return nil
		}
		return &v.Uris
	}).(pulumi.StringPtrOutput)
}

func (o SnowflakeInputsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnowflakeInputs) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

func (o SnowflakeInputsPtrOutput) WarehouseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnowflakeInputs) *string {
		if v == nil {
			return nil
		}
		return &v.WarehouseName
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaInputsInput)(nil)).Elem(), KafkaInputsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaInputsPtrInput)(nil)).Elem(), KafkaInputsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PostgresInputsInput)(nil)).Elem(), PostgresInputsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PostgresInputsPtrInput)(nil)).Elem(), PostgresInputsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnowflakeInputsInput)(nil)).Elem(), SnowflakeInputsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnowflakeInputsPtrInput)(nil)).Elem(), SnowflakeInputsArgs{})
	pulumi.RegisterOutputType(GetDatabaseResultOutput{})
	pulumi.RegisterOutputType(GetDatabaseResultArrayOutput{})
	pulumi.RegisterOutputType(GetNamespaceResultOutput{})
	pulumi.RegisterOutputType(GetNamespaceResultArrayOutput{})
	pulumi.RegisterOutputType(GetObjectResultOutput{})
	pulumi.RegisterOutputType(GetObjectResultArrayOutput{})
	pulumi.RegisterOutputType(GetStoreResultOutput{})
	pulumi.RegisterOutputType(GetStoreResultArrayOutput{})
	pulumi.RegisterOutputType(KafkaInputsOutput{})
	pulumi.RegisterOutputType(KafkaInputsPtrOutput{})
	pulumi.RegisterOutputType(PostgresInputsOutput{})
	pulumi.RegisterOutputType(PostgresInputsPtrOutput{})
	pulumi.RegisterOutputType(SnowflakeInputsOutput{})
	pulumi.RegisterOutputType(SnowflakeInputsPtrOutput{})
}
