// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pulumideltastream

import (
	"context"
	"reflect"

	"github.com/deltastreaminc/pulumi-deltastream/sdk/go/pulumi-deltastream/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetNamespaces(ctx *pulumi.Context, args *GetNamespacesArgs, opts ...pulumi.InvokeOption) (*GetNamespacesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNamespacesResult
	err := ctx.Invoke("deltastream:index:getNamespaces", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetNamespacesArgs struct {
	Database string `pulumi:"database"`
}

type GetNamespacesResult struct {
	Namespaces []GetNamespaceResult `pulumi:"namespaces"`
}

func GetNamespacesOutput(ctx *pulumi.Context, args GetNamespacesOutputArgs, opts ...pulumi.InvokeOption) GetNamespacesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetNamespacesResultOutput, error) {
			args := v.(GetNamespacesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("deltastream:index:getNamespaces", args, GetNamespacesResultOutput{}, options).(GetNamespacesResultOutput), nil
		}).(GetNamespacesResultOutput)
}

type GetNamespacesOutputArgs struct {
	Database pulumi.StringInput `pulumi:"database"`
}

func (GetNamespacesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespacesArgs)(nil)).Elem()
}

type GetNamespacesResultOutput struct{ *pulumi.OutputState }

func (GetNamespacesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNamespacesResult)(nil)).Elem()
}

func (o GetNamespacesResultOutput) ToGetNamespacesResultOutput() GetNamespacesResultOutput {
	return o
}

func (o GetNamespacesResultOutput) ToGetNamespacesResultOutputWithContext(ctx context.Context) GetNamespacesResultOutput {
	return o
}

func (o GetNamespacesResultOutput) Namespaces() GetNamespaceResultArrayOutput {
	return o.ApplyT(func(v GetNamespacesResult) []GetNamespaceResult { return v.Namespaces }).(GetNamespaceResultArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNamespacesResultOutput{})
}
