// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deltastream

import (
	"context"
	"reflect"

	"github.com/deltastreaminc/pulumi-deltastream/sdk/go/deltastream/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Entities in a store
func GetEntityData(ctx *pulumi.Context, args *GetEntityDataArgs, opts ...pulumi.InvokeOption) (*GetEntityDataResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEntityDataResult
	err := ctx.Invoke("deltastream:index/getEntityData:getEntityData", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEntityData.
type GetEntityDataArgs struct {
	// Path to entity
	EntityPaths []string `pulumi:"entityPaths"`
	// Read from beginning
	FromBeginning *bool `pulumi:"fromBeginning"`
	// Number of rows to return
	NumRows *int `pulumi:"numRows"`
	// Name of the Store
	Store string `pulumi:"store"`
}

// A collection of values returned by getEntityData.
type GetEntityDataResult struct {
	// Path to entity
	EntityPaths []string `pulumi:"entityPaths"`
	// Read from beginning
	FromBeginning *bool `pulumi:"fromBeginning"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Number of rows to return
	NumRows *int `pulumi:"numRows"`
	// Rows
	Rows []string `pulumi:"rows"`
	// Name of the Store
	Store string `pulumi:"store"`
}

func GetEntityDataOutput(ctx *pulumi.Context, args GetEntityDataOutputArgs, opts ...pulumi.InvokeOption) GetEntityDataResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetEntityDataResultOutput, error) {
			args := v.(GetEntityDataArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("deltastream:index/getEntityData:getEntityData", args, GetEntityDataResultOutput{}, options).(GetEntityDataResultOutput), nil
		}).(GetEntityDataResultOutput)
}

// A collection of arguments for invoking getEntityData.
type GetEntityDataOutputArgs struct {
	// Path to entity
	EntityPaths pulumi.StringArrayInput `pulumi:"entityPaths"`
	// Read from beginning
	FromBeginning pulumi.BoolPtrInput `pulumi:"fromBeginning"`
	// Number of rows to return
	NumRows pulumi.IntPtrInput `pulumi:"numRows"`
	// Name of the Store
	Store pulumi.StringInput `pulumi:"store"`
}

func (GetEntityDataOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntityDataArgs)(nil)).Elem()
}

// A collection of values returned by getEntityData.
type GetEntityDataResultOutput struct{ *pulumi.OutputState }

func (GetEntityDataResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntityDataResult)(nil)).Elem()
}

func (o GetEntityDataResultOutput) ToGetEntityDataResultOutput() GetEntityDataResultOutput {
	return o
}

func (o GetEntityDataResultOutput) ToGetEntityDataResultOutputWithContext(ctx context.Context) GetEntityDataResultOutput {
	return o
}

// Path to entity
func (o GetEntityDataResultOutput) EntityPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEntityDataResult) []string { return v.EntityPaths }).(pulumi.StringArrayOutput)
}

// Read from beginning
func (o GetEntityDataResultOutput) FromBeginning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetEntityDataResult) *bool { return v.FromBeginning }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEntityDataResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntityDataResult) string { return v.Id }).(pulumi.StringOutput)
}

// Number of rows to return
func (o GetEntityDataResultOutput) NumRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetEntityDataResult) *int { return v.NumRows }).(pulumi.IntPtrOutput)
}

// Rows
func (o GetEntityDataResultOutput) Rows() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEntityDataResult) []string { return v.Rows }).(pulumi.StringArrayOutput)
}

// Name of the Store
func (o GetEntityDataResultOutput) Store() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntityDataResult) string { return v.Store }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEntityDataResultOutput{})
}
