// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace DeltaStream.Pulumi
{
    public static class GetEntityData
    {
        /// <summary>
        /// Entities in a store
        /// </summary>
        public static Task<GetEntityDataResult> InvokeAsync(GetEntityDataArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEntityDataResult>("deltastream:index/getEntityData:getEntityData", args ?? new GetEntityDataArgs(), options.WithDefaults());

        /// <summary>
        /// Entities in a store
        /// </summary>
        public static Output<GetEntityDataResult> Invoke(GetEntityDataInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEntityDataResult>("deltastream:index/getEntityData:getEntityData", args ?? new GetEntityDataInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Entities in a store
        /// </summary>
        public static Output<GetEntityDataResult> Invoke(GetEntityDataInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetEntityDataResult>("deltastream:index/getEntityData:getEntityData", args ?? new GetEntityDataInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEntityDataArgs : global::Pulumi.InvokeArgs
    {
        [Input("entityPaths", required: true)]
        private List<string>? _entityPaths;

        /// <summary>
        /// Path to entity
        /// </summary>
        public List<string> EntityPaths
        {
            get => _entityPaths ?? (_entityPaths = new List<string>());
            set => _entityPaths = value;
        }

        /// <summary>
        /// Read from beginning
        /// </summary>
        [Input("fromBeginning")]
        public bool? FromBeginning { get; set; }

        /// <summary>
        /// Number of rows to return
        /// </summary>
        [Input("numRows")]
        public int? NumRows { get; set; }

        /// <summary>
        /// Name of the Store
        /// </summary>
        [Input("store", required: true)]
        public string Store { get; set; } = null!;

        public GetEntityDataArgs()
        {
        }
        public static new GetEntityDataArgs Empty => new GetEntityDataArgs();
    }

    public sealed class GetEntityDataInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("entityPaths", required: true)]
        private InputList<string>? _entityPaths;

        /// <summary>
        /// Path to entity
        /// </summary>
        public InputList<string> EntityPaths
        {
            get => _entityPaths ?? (_entityPaths = new InputList<string>());
            set => _entityPaths = value;
        }

        /// <summary>
        /// Read from beginning
        /// </summary>
        [Input("fromBeginning")]
        public Input<bool>? FromBeginning { get; set; }

        /// <summary>
        /// Number of rows to return
        /// </summary>
        [Input("numRows")]
        public Input<int>? NumRows { get; set; }

        /// <summary>
        /// Name of the Store
        /// </summary>
        [Input("store", required: true)]
        public Input<string> Store { get; set; } = null!;

        public GetEntityDataInvokeArgs()
        {
        }
        public static new GetEntityDataInvokeArgs Empty => new GetEntityDataInvokeArgs();
    }


    [OutputType]
    public sealed class GetEntityDataResult
    {
        /// <summary>
        /// Path to entity
        /// </summary>
        public readonly ImmutableArray<string> EntityPaths;
        /// <summary>
        /// Read from beginning
        /// </summary>
        public readonly bool? FromBeginning;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Number of rows to return
        /// </summary>
        public readonly int? NumRows;
        /// <summary>
        /// Rows
        /// </summary>
        public readonly ImmutableArray<string> Rows;
        /// <summary>
        /// Name of the Store
        /// </summary>
        public readonly string Store;

        [OutputConstructor]
        private GetEntityDataResult(
            ImmutableArray<string> entityPaths,

            bool? fromBeginning,

            string id,

            int? numRows,

            ImmutableArray<string> rows,

            string store)
        {
            EntityPaths = entityPaths;
            FromBeginning = fromBeginning;
            Id = id;
            NumRows = numRows;
            Rows = rows;
            Store = store;
        }
    }
}
