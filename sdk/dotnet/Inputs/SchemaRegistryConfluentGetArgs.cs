// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace DeltaStream.Pulumi.Inputs
{

    public sealed class SchemaRegistryConfluentGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// Password to use when authenticating with confluent schema registry
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// List of host:port URIs to connect to the schema registry
        /// </summary>
        [Input("uris", required: true)]
        public Input<string> Uris { get; set; } = null!;

        [Input("username")]
        private Input<string>? _username;

        /// <summary>
        /// Username to use when authenticating with confluent schema registry
        /// </summary>
        public Input<string>? Username
        {
            get => _username;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _username = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public SchemaRegistryConfluentGetArgs()
        {
        }
        public static new SchemaRegistryConfluentGetArgs Empty => new SchemaRegistryConfluentGetArgs();
    }
}
