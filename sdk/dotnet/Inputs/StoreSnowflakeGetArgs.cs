// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace DeltaStream.Pulumi.Inputs
{

    public sealed class StoreSnowflakeGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Snowflake account ID
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        [Input("clientKeyFile", required: true)]
        private Input<string>? _clientKeyFile;

        /// <summary>
        /// Snowflake account's private key in PEM format
        /// </summary>
        public Input<string>? ClientKeyFile
        {
            get => _clientKeyFile;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientKeyFile = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("clientKeyPassphrase", required: true)]
        private Input<string>? _clientKeyPassphrase;

        /// <summary>
        /// Passphrase for decrypting the Snowflake account's private key
        /// </summary>
        public Input<string>? ClientKeyPassphrase
        {
            get => _clientKeyPassphrase;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientKeyPassphrase = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Snowflake cloud region name, where the account resources operate in
        /// </summary>
        [Input("cloudRegion", required: true)]
        public Input<string> CloudRegion { get; set; } = null!;

        /// <summary>
        /// Access control role to use for the Store operations after connecting to Snowflake
        /// </summary>
        [Input("roleName", required: true)]
        public Input<string> RoleName { get; set; } = null!;

        /// <summary>
        /// List of host:port URIs to connect to the store
        /// </summary>
        [Input("uris", required: true)]
        public Input<string> Uris { get; set; } = null!;

        [Input("username", required: true)]
        private Input<string>? _username;

        /// <summary>
        /// User login name for the Snowflake account
        /// </summary>
        public Input<string>? Username
        {
            get => _username;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _username = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Warehouse name to use for queries and other store operations that require compute resource
        /// </summary>
        [Input("warehouseName", required: true)]
        public Input<string> WarehouseName { get; set; } = null!;

        public StoreSnowflakeGetArgs()
        {
        }
        public static new StoreSnowflakeGetArgs Empty => new StoreSnowflakeGetArgs();
    }
}
