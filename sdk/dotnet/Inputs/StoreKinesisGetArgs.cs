// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace DeltaStream.Pulumi.Inputs
{

    public sealed class StoreKinesisGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessKeyId")]
        private Input<string>? _accessKeyId;

        /// <summary>
        /// AWS IAM access key to use when authenticating with an Amazon Kinesis service
        /// </summary>
        public Input<string>? AccessKeyId
        {
            get => _accessKeyId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accessKeyId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("awsAccountId", required: true)]
        private Input<string>? _awsAccountId;

        /// <summary>
        /// AWS account ID to use when authenticating with an Amazon Kinesis service
        /// </summary>
        public Input<string>? AwsAccountId
        {
            get => _awsAccountId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _awsAccountId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("secretAccessKey")]
        private Input<string>? _secretAccessKey;

        /// <summary>
        /// AWS IAM secret access key to use when authenticating with an Amazon Kinesis service
        /// </summary>
        public Input<string>? SecretAccessKey
        {
            get => _secretAccessKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _secretAccessKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// List of host:port URIs to connect to the store
        /// </summary>
        [Input("uris", required: true)]
        public Input<string> Uris { get; set; } = null!;

        public StoreKinesisGetArgs()
        {
        }
        public static new StoreKinesisGetArgs Empty => new StoreKinesisGetArgs();
    }
}
