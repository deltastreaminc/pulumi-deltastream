// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace DeltaStream.Pulumi.Outputs
{

    [OutputType]
    public sealed class StoreKafka
    {
        /// <summary>
        /// AWS region where the Amazon MSK cluster is located
        /// </summary>
        public readonly string? MskAwsRegion;
        /// <summary>
        /// IAM role ARN to use when authenticating with Amazon MSK
        /// </summary>
        public readonly string? MskIamRoleArn;
        /// <summary>
        /// SASL hash function to use when authenticating with Apache Kafka brokers
        /// </summary>
        public readonly string SaslHashFunction;
        /// <summary>
        /// Password to use when authenticating with Apache Kafka brokers
        /// </summary>
        public readonly string? SaslPassword;
        /// <summary>
        /// Username to use when authenticating with Apache Kafka brokers
        /// </summary>
        public readonly string? SaslUsername;
        /// <summary>
        /// Name of the schema registry
        /// </summary>
        public readonly string? SchemaRegistryName;
        /// <summary>
        /// CA certificate in PEM format
        /// </summary>
        public readonly string? TlsCaCertFile;
        /// <summary>
        /// Specifies if the store should be accessed over TLS
        /// </summary>
        public readonly bool? TlsDisabled;
        /// <summary>
        /// Specifies if the server CNAME should be validated against the certificate
        /// </summary>
        public readonly bool? TlsVerifyServerHostname;
        /// <summary>
        /// List of host:port URIs to connect to the store
        /// </summary>
        public readonly string Uris;

        [OutputConstructor]
        private StoreKafka(
            string? mskAwsRegion,

            string? mskIamRoleArn,

            string saslHashFunction,

            string? saslPassword,

            string? saslUsername,

            string? schemaRegistryName,

            string? tlsCaCertFile,

            bool? tlsDisabled,

            bool? tlsVerifyServerHostname,

            string uris)
        {
            MskAwsRegion = mskAwsRegion;
            MskIamRoleArn = mskIamRoleArn;
            SaslHashFunction = saslHashFunction;
            SaslPassword = saslPassword;
            SaslUsername = saslUsername;
            SchemaRegistryName = schemaRegistryName;
            TlsCaCertFile = tlsCaCertFile;
            TlsDisabled = tlsDisabled;
            TlsVerifyServerHostname = tlsVerifyServerHostname;
            Uris = uris;
        }
    }
}
