// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace DeltaStream.Pulumi.Outputs
{

    [OutputType]
    public sealed class EntityKafkaProperties
    {
        /// <summary>
        /// All topic configurations including any server set configurations
        /// </summary>
        public readonly ImmutableDictionary<string, string>? AllConfigs;
        /// <summary>
        /// Additional topic configurations
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Configs;
        /// <summary>
        /// Protobuf descriptor for key
        /// </summary>
        public readonly string? KeyDescriptor;
        /// <summary>
        /// Number of partitions
        /// </summary>
        public readonly int? TopicPartitions;
        /// <summary>
        /// Number of replicas
        /// </summary>
        public readonly int? TopicReplicas;
        /// <summary>
        /// Protobuf descriptor for value
        /// </summary>
        public readonly string? ValueDescriptor;

        [OutputConstructor]
        private EntityKafkaProperties(
            ImmutableDictionary<string, string>? allConfigs,

            ImmutableDictionary<string, string>? configs,

            string? keyDescriptor,

            int? topicPartitions,

            int? topicReplicas,

            string? valueDescriptor)
        {
            AllConfigs = allConfigs;
            Configs = configs;
            KeyDescriptor = keyDescriptor;
            TopicPartitions = topicPartitions;
            TopicReplicas = topicReplicas;
            ValueDescriptor = valueDescriptor;
        }
    }
}
