// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace DeltaStream.Pulumi
{
    public static class GetNamespaces
    {
        /// <summary>
        /// Namespace resource
        /// </summary>
        public static Task<GetNamespacesResult> InvokeAsync(GetNamespacesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNamespacesResult>("deltastream:index/getNamespaces:getNamespaces", args ?? new GetNamespacesArgs(), options.WithDefaults());

        /// <summary>
        /// Namespace resource
        /// </summary>
        public static Output<GetNamespacesResult> Invoke(GetNamespacesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespacesResult>("deltastream:index/getNamespaces:getNamespaces", args ?? new GetNamespacesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Namespace resource
        /// </summary>
        public static Output<GetNamespacesResult> Invoke(GetNamespacesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespacesResult>("deltastream:index/getNamespaces:getNamespaces", args ?? new GetNamespacesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNamespacesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Database
        /// </summary>
        [Input("database", required: true)]
        public string Database { get; set; } = null!;

        public GetNamespacesArgs()
        {
        }
        public static new GetNamespacesArgs Empty => new GetNamespacesArgs();
    }

    public sealed class GetNamespacesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Database
        /// </summary>
        [Input("database", required: true)]
        public Input<string> Database { get; set; } = null!;

        public GetNamespacesInvokeArgs()
        {
        }
        public static new GetNamespacesInvokeArgs Empty => new GetNamespacesInvokeArgs();
    }


    [OutputType]
    public sealed class GetNamespacesResult
    {
        /// <summary>
        /// Name of the Database
        /// </summary>
        public readonly string Database;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of namespaces
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNamespacesItemResult> Items;

        [OutputConstructor]
        private GetNamespacesResult(
            string database,

            string id,

            ImmutableArray<Outputs.GetNamespacesItemResult> items)
        {
            Database = database;
            Id = id;
            Items = items;
        }
    }
}
