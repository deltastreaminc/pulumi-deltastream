// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Immutable;

namespace DeltaStream.Pulumi
{
    public static class Config
    {
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "IDE1006", Justification = 
        "Double underscore prefix used to avoid conflicts with variable names.")]
        private sealed class __Value<T>
        {
            private readonly Func<T> _getter;
            private T _value = default!;
            private bool _set;

            public __Value(Func<T> getter)
            {
                _getter = getter;
            }

            public T Get() => _set ? _value : _getter();

            public void Set(T value)
            {
                _value = value;
                _set = true;
            }
        }

        private static readonly global::Pulumi.Config __config = new global::Pulumi.Config("deltastream");

        private static readonly __Value<string?> _apiKey = new __Value<string?>(() => __config.Get("apiKey"));
        /// <summary>
        /// API key. Can also be set via the DELTASTREAM_API_KEY environment variable
        /// </summary>
        public static string? ApiKey
        {
            get => _apiKey.Get();
            set => _apiKey.Set(value);
        }

        private static readonly __Value<bool?> _insecureSkipVerify = new __Value<bool?>(() => __config.GetBoolean("insecureSkipVerify"));
        /// <summary>
        /// Skip SSL verification
        /// </summary>
        public static bool? InsecureSkipVerify
        {
            get => _insecureSkipVerify.Get();
            set => _insecureSkipVerify.Set(value);
        }

        private static readonly __Value<string?> _organization = new __Value<string?>(() => __config.Get("organization"));
        /// <summary>
        /// DeltaStream organization ID. Can also be set via the DELTASTREAM_ORGANIZATION environment variable.
        /// </summary>
        public static string? Organization
        {
            get => _organization.Get();
            set => _organization.Set(value);
        }

        private static readonly __Value<string?> _role = new __Value<string?>(() => __config.Get("role"));
        /// <summary>
        /// DeltaStream role to use for managing resources and queries. Can also be set via the DELTASTREAM_ROLE environment
        /// variable. Default: sysadmin
        /// </summary>
        public static string? Role
        {
            get => _role.Get();
            set => _role.Set(value);
        }

        private static readonly __Value<string?> _server = new __Value<string?>(() => __config.Get("server"));
        /// <summary>
        /// Server. Can also be set via the DELTASTREAM_SERVER environment variable
        /// </summary>
        public static string? Server
        {
            get => _server.Get();
            set => _server.Set(value);
        }

    }
}
